version: '3.5'

services:
  auth:
    container_name: auth_api
    image: auth_api
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - auth_network
    env_file:
      - list.env
    restart: always
    depends_on:
      - postgres
      - redis

  redis:
    container_name: auth_redis
    image: redis:latest
    volumes:
      - auth_redis_data:/var/lib/redis/data
    networks:
      - auth_network
    restart: always

  postgres:
    container_name: auth_postgres
    image: postgres:12
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=oracle
    volumes:
      - auth_pgdata:/var/lib/postgresql/data
    networks:
      - auth_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  nginx:
    image: nginx:1.19.2
    ports:
      - "80:80"
    networks:
      - auth_network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - auth
    restart: always


networks:
  auth_network:

volumes:
  auth_redis_data:
  auth_pgdata: